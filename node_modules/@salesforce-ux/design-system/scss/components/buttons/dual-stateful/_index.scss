// Lightning Design System 2.15.8
// Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
// Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license

@import '../mixins/index';

/**
 * @summary Initiates a dual stateful button
 * @name dual-stateful
 * @selector .slds-button_dual-stateful
 * @restrict button
 * @support dev-ready
 * @variant
 */
.slds-button_dual-stateful {
  /**
   * @summary Shown text when button is not pressed - default state
   * @selector .slds-text-not-pressed
   * @restrict .slds-button_dual-stateful span
   */
  .slds-text-not-pressed {
    display: block;
  }

  /**
   * @summary Shown text when button is pressed
   * @selector .slds-text-pressed
   * @restrict .slds-button_dual-stateful span
   */
  .slds-text-pressed {
    display: none;
  }
}

/**
 * @summary When button is in pressed state
 * @selector .slds-is-pressed
 * @restrict .slds-button_dual-stateful
 * @notes This class should be toggled with JavaScript
 * @modifier
 * @group interaction
 */
.slds-button_dual-stateful.slds-is-pressed {
  /**
   * Styling Hooks uses button-brand identifier instead of button_dual-stateful
   * because dual stateful is a brand variant underneath the hood and therefore
   * should pick up any styling customizations made to the brand variant.
   */
  @include button-shape(brand);

  // @todo re-evaluate Styling Hooks reassignment
  background-color: var(--sds-c-button-brand-color-background, $brand-accessible);

  // @todo re-evaluate Styling Hooks reassignment
  border-color: var(--sds-c-button-brand-color-border, $brand-accessible);

  // @todo re-evaluate Styling Hooks reassignment
  color: var(--sds-c-button-brand-text-color, $color-text-brand-primary);

  // Since dual-stateful has a high specificity, we have to be explicit with pseudo-class
  &:focus,
  &:hover {
    // @todo re-evaluate Styling Hooks reassignment
    background-color: var(--sds-c-button-brand-color-background-hover, $brand-accessible-active);

    // @todo re-evaluate Styling Hooks reassignment
    border-color: var(--sds-c-button-brand-color-border-hover, $brand-accessible-active);

    // @todo re-evaluate Styling Hooks reassignment
    color: var(--sds-c-button-brand-text-color-hover, $color-text-brand-primary);
  }

  .slds-text-not-pressed {
    display: none;
  }

  .slds-text-pressed {
    display: block;
  }
}
